"""initial

Revision ID: 63f4f64bd954
Revises: 
Create Date: 2025-04-22 21:20:32.841030

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '63f4f64bd954'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('datasets',
    sa.Column('dataset_id', sa.Integer(), nullable=False),
    sa.Column('filename', sa.String(length=255), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('datastats', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('dataset_id')
    )
    op.create_index(op.f('ix_datasets_created_at'), 'datasets', ['created_at'], unique=False)
    op.create_index(op.f('ix_datasets_dataset_id'), 'datasets', ['dataset_id'], unique=False)
    op.create_index(op.f('ix_datasets_filename'), 'datasets', ['filename'], unique=True)
    op.create_table('raw_datasets',
    sa.Column('dataset_id', sa.Integer(), nullable=False),
    sa.Column('filename', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('datastats', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('dataset_id')
    )
    op.create_index(op.f('ix_raw_datasets_dataset_id'), 'raw_datasets', ['dataset_id'], unique=False)
    op.create_index(op.f('ix_raw_datasets_filename'), 'raw_datasets', ['filename'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('role', sa.String(), nullable=False),
    sa.Column('data_url', sa.String(), nullable=True),
    sa.Column('hashed_password', sa.String(), nullable=True),
    sa.Column('refresh_token', sa.String(), nullable=True),
    sa.Column('createdAt', sa.DateTime(), nullable=True),
    sa.Column('updatedAt', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('federated_sessions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('federated_info', sa.JSON(), nullable=False),
    sa.Column('admin_id', sa.Integer(), nullable=False),
    sa.Column('curr_round', sa.Integer(), nullable=False),
    sa.Column('max_round', sa.Integer(), nullable=False),
    sa.Column('session_price', sa.Float(), nullable=True),
    sa.Column('training_status', sa.Integer(), nullable=False),
    sa.Column('wait_till', sa.DateTime(), nullable=True),
    sa.Column('createdAt', sa.DateTime(), nullable=True),
    sa.Column('updatedAt', sa.DateTime(), nullable=True),
    sa.Column('deletedAt', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['admin_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_federated_sessions_id'), 'federated_sessions', ['id'], unique=False)
    op.create_table('notifications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('message', sa.JSON(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('notified_at', sa.DateTime(), nullable=True),
    sa.Column('valid_until', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_notifications_id'), 'notifications', ['id'], unique=False)
    op.create_table('tasks',
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.Column('dataset_id', sa.Integer(), nullable=False),
    sa.Column('task_name', sa.String(length=255), nullable=False),
    sa.Column('metric', sa.String(length=50), nullable=False),
    sa.Column('temp_benchmark', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.CheckConstraint("metric IN ('MSE', 'MAE', 'Accuracy', 'MSLE', 'R2', 'LogLoss', 'AUC', 'F1', 'Precision', 'Recall')"),
    sa.ForeignKeyConstraint(['dataset_id'], ['datasets.dataset_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('task_id')
    )
    op.create_index('idx_tasks_dataset', 'tasks', ['dataset_id'], unique=False)
    op.create_index('idx_tasks_metric', 'tasks', ['metric'], unique=False)
    op.create_index(op.f('ix_tasks_created_at'), 'tasks', ['created_at'], unique=False)
    op.create_index(op.f('ix_tasks_dataset_id'), 'tasks', ['dataset_id'], unique=False)
    op.create_index(op.f('ix_tasks_task_id'), 'tasks', ['task_id'], unique=False)
    op.create_table('benchmarks',
    sa.Column('benchmark_id', sa.Integer(), nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.Column('metric_value', sa.Float(), nullable=False),
    sa.Column('training_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.task_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['training_id'], ['federated_sessions.id'], ),
    sa.PrimaryKeyConstraint('benchmark_id')
    )
    op.create_index('idx_benchmarks_task', 'benchmarks', ['task_id'], unique=False)
    op.create_index('idx_benchmarks_time', 'benchmarks', [sa.literal_column('created_at DESC')], unique=False)
    op.create_index(op.f('ix_benchmarks_benchmark_id'), 'benchmarks', ['benchmark_id'], unique=False)
    op.create_index(op.f('ix_benchmarks_created_at'), 'benchmarks', ['created_at'], unique=False)
    op.create_index(op.f('ix_benchmarks_task_id'), 'benchmarks', ['task_id'], unique=False)
    op.create_table('federated_round_client_submissions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('session_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('round_number', sa.Integer(), nullable=False),
    sa.Column('createdAt', sa.DateTime(), nullable=True),
    sa.Column('updatedAt', sa.DateTime(), nullable=True),
    sa.Column('deletedAt', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['session_id'], ['federated_sessions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('session_id', 'user_id', 'round_number', name='unique_client_round_submission')
    )
    op.create_index(op.f('ix_federated_round_client_submissions_id'), 'federated_round_client_submissions', ['id'], unique=False)
    op.create_table('federated_session_clients',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('session_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Integer(), nullable=False),
    sa.Column('ip', sa.String(), nullable=False),
    sa.Column('createdAt', sa.DateTime(), nullable=True),
    sa.Column('updatedAt', sa.DateTime(), nullable=True),
    sa.Column('deletedAt', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['session_id'], ['federated_sessions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_federated_session_clients_id'), 'federated_session_clients', ['id'], unique=False)
    op.create_table('federated_session_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('session_id', sa.Integer(), nullable=False),
    sa.Column('message', sa.String(), nullable=False),
    sa.Column('createdAt', sa.DateTime(), nullable=True),
    sa.Column('updatedAt', sa.DateTime(), nullable=True),
    sa.Column('deletedAt', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['session_id'], ['federated_sessions.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_federated_session_logs_id'), 'federated_session_logs', ['id'], unique=False)
    op.create_table('federated_test_results',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('session_id', sa.Integer(), nullable=False),
    sa.Column('round_number', sa.Integer(), nullable=False),
    sa.Column('metrics', sa.JSON(), nullable=False),
    sa.Column('createdAt', sa.DateTime(), nullable=True),
    sa.Column('updatedAt', sa.DateTime(), nullable=True),
    sa.Column('deletedAt', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['session_id'], ['federated_sessions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_federated_test_results_id'), 'federated_test_results', ['id'], unique=False)
    op.create_table('global_model_weights',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('session_id', sa.Integer(), nullable=False),
    sa.Column('weights', sa.JSON(), nullable=True),
    sa.Column('createdAt', sa.DateTime(), nullable=True),
    sa.Column('updatedAt', sa.DateTime(), nullable=True),
    sa.Column('deletedAt', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['session_id'], ['federated_sessions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('training_data_transfers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('training_name', sa.String(), nullable=False),
    sa.Column('num_datapoints', sa.Integer(), nullable=False),
    sa.Column('data_path', sa.String(), nullable=False),
    sa.Column('parent_filename', sa.String(), nullable=False),
    sa.Column('datastats', sa.JSON(), nullable=True),
    sa.Column('federated_session_id', sa.Integer(), nullable=False),
    sa.Column('transferredAt', sa.DateTime(), nullable=False),
    sa.Column('approvedAt', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['federated_session_id'], ['federated_sessions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_training_data_transfers_federated_session_id'), 'training_data_transfers', ['federated_session_id'], unique=False)
    op.create_index(op.f('ix_training_data_transfers_id'), 'training_data_transfers', ['id'], unique=False)
    op.create_table('client_model_weights',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('submission_id', sa.Integer(), nullable=True),
    sa.Column('weights', sa.JSON(), nullable=False),
    sa.Column('createdAt', sa.DateTime(), nullable=True),
    sa.Column('updatedAt', sa.DateTime(), nullable=True),
    sa.Column('deletedAt', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['submission_id'], ['federated_round_client_submissions.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('submission_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('client_model_weights')
    op.drop_index(op.f('ix_training_data_transfers_id'), table_name='training_data_transfers')
    op.drop_index(op.f('ix_training_data_transfers_federated_session_id'), table_name='training_data_transfers')
    op.drop_table('training_data_transfers')
    op.drop_table('global_model_weights')
    op.drop_index(op.f('ix_federated_test_results_id'), table_name='federated_test_results')
    op.drop_table('federated_test_results')
    op.drop_index(op.f('ix_federated_session_logs_id'), table_name='federated_session_logs')
    op.drop_table('federated_session_logs')
    op.drop_index(op.f('ix_federated_session_clients_id'), table_name='federated_session_clients')
    op.drop_table('federated_session_clients')
    op.drop_index(op.f('ix_federated_round_client_submissions_id'), table_name='federated_round_client_submissions')
    op.drop_table('federated_round_client_submissions')
    op.drop_index(op.f('ix_benchmarks_task_id'), table_name='benchmarks')
    op.drop_index(op.f('ix_benchmarks_created_at'), table_name='benchmarks')
    op.drop_index(op.f('ix_benchmarks_benchmark_id'), table_name='benchmarks')
    op.drop_index('idx_benchmarks_time', table_name='benchmarks')
    op.drop_index('idx_benchmarks_task', table_name='benchmarks')
    op.drop_table('benchmarks')
    op.drop_index(op.f('ix_tasks_task_id'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_dataset_id'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_created_at'), table_name='tasks')
    op.drop_index('idx_tasks_metric', table_name='tasks')
    op.drop_index('idx_tasks_dataset', table_name='tasks')
    op.drop_table('tasks')
    op.drop_index(op.f('ix_notifications_id'), table_name='notifications')
    op.drop_table('notifications')
    op.drop_index(op.f('ix_federated_sessions_id'), table_name='federated_sessions')
    op.drop_table('federated_sessions')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_raw_datasets_filename'), table_name='raw_datasets')
    op.drop_index(op.f('ix_raw_datasets_dataset_id'), table_name='raw_datasets')
    op.drop_table('raw_datasets')
    op.drop_index(op.f('ix_datasets_filename'), table_name='datasets')
    op.drop_index(op.f('ix_datasets_dataset_id'), table_name='datasets')
    op.drop_index(op.f('ix_datasets_created_at'), table_name='datasets')
    op.drop_table('datasets')
    # ### end Alembic commands ###
